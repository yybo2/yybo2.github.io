{"meta":{"title":"Bo2","subtitle":"","description":"","author":"Bo2","url":"https://yybo2.github.io","root":"/"},"pages":[{"title":"","date":"2020-07-02T03:44:10.750Z","updated":"2020-07-02T03:44:10.710Z","comments":true,"path":"about/index.json","permalink":"https://yybo2.github.io/about/index.json","excerpt":"","text":"{\"name\":\"bo2\",\"phone\":\"17640177992\",\"birth\":\"94-09-25\",\"email\":\"leerau@163.com\",\"address\":\"Hunnan - Shenyang - Liaoning\"}"},{"title":"","date":"2020-07-02T05:22:21.195Z","updated":"2020-07-02T05:22:21.159Z","comments":true,"path":"about/index.html","permalink":"https://yybo2.github.io/about/index.html","excerpt":"","text":"Title .color-block{ height: 10px; width: 10px; } span{ line-height: 2; } $(function(){ let htmlobj=$.ajax({url:\"index.json\",async:false}); const info = htmlobj.responseJSON; $(\"#name\").text($(\"#name\").text()+info.name); $(\"#phone\").text($(\"#phone\").text()+info.phone); $(\"#birth\").text($(\"#birth\").text()+info.birth); $(\"#email\").text($(\"#email\").text()+info.email); $(\"#address\").text($(\"#address\").text()+info.address); }); 👦姓名： 🏧手机： 🎂生日： 💌邮件： 🏡地址："},{"title":"","date":"2020-04-28T09:15:54.000Z","updated":"2020-07-03T03:44:53.414Z","comments":true,"path":"categories/index.html","permalink":"https://yybo2.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-07-03T03:28:14.000Z","updated":"2020-07-03T03:28:45.449Z","comments":true,"path":"tags/index.html","permalink":"https://yybo2.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"hegii-记事本","slug":"hegii-Email","date":"2020-07-09T09:15:47.000Z","updated":"2020-07-09T09:35:04.754Z","comments":true,"path":"2020/07/09/hegii-Email/","link":"","permalink":"https://yybo2.github.io/2020/07/09/hegii-Email/","excerpt":"记录一下hegii项目的一些东西，如邮箱账号，vpn账号等","text":"恒洁公众平台邮箱 Hegii_MP@163.com","categories":[],"tags":[]},{"title":"Hejii-中台小程序调研","slug":"Hejii-中台小程序调研","date":"2020-07-06T05:59:10.000Z","updated":"2020-07-09T09:19:51.355Z","comments":true,"path":"2020/07/06/Hejii-中台小程序调研/","link":"","permalink":"https://yybo2.github.io/2020/07/06/Hejii-%E4%B8%AD%E5%8F%B0%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%A0%94/","excerpt":"小程序开发过程调研","text":"封装request 获取openId和session_key 获取用户手机号 获取access_token 推送订阅消息 封装request (api.js) 1234567891011121314151617181920212223242526272829303132333435363738394041/* 请求的错误不应该被调用方catch 把错误的请求当成请求正常返回的结果 由调用方根据状态码来判断是否成功 *//* 服务端IP+端口 */export const API_URI = 'http://192.168.0.22:8000'/* 调用的请求方法 */function request(url,requestType,params) &#123; return new Promise((resolve, reject) =&gt; &#123; wxRequest(url, requestType, params).then(res=&gt;&#123; console.log(\"req成功\") resolve(res) &#125;).catch(err =&gt; &#123; console.log(\"req失败\") resolve(&#123; code: -200, message: \"请求失败\", data: err&#125;); &#125;) &#125;)&#125;/* 封装wx.request */function wxRequest(url, requestType, params)&#123; return new Promise((resolve, reject) =&gt; &#123; wx.request(&#123; url: `$&#123;API_URI&#125;/$&#123;url&#125;`, data: params ? params : null, method: requestType ? requestType : 'POST', success: function (res) &#123; resolve(res); &#125;, fail: function (err) &#123; reject(err); &#125; &#125;) &#125;)&#125;/* 暴露方法给外部 */module.exports = &#123; request&#125; 获取openId和session_key获取openId 需要先调用wx.login()获得code,再调用后台服务登陆接口取得openId 小程序端123456789101112131415login()&#123; wx.login(&#123; success(res) &#123; console.log(res) if (res.code) &#123; //发起网络请求 api.request('login/login','POST',res).then(login_res=&gt;&#123; console.log('登陆成功', login_res) &#125;) &#125; else &#123; console.log('登录失败！' + login_res.errMsg) &#125; &#125; &#125;)&#125; 后台服务端123456789101112131415161718@RestController@RequestMapping(\"/login\")public class LoginController &#123; @PostMapping(\"login\") public Bo2Result login(@RequestBody Map&lt;String,Object&gt; param)&#123; String apiUrl=\"https://api.weixin.qq.com/sns/jscode2session?\" +\"appid=\"+ Config.APP_ID +\"&amp;secret=\"+Config.APP_SECRET +\"&amp;js_code=\"+param.get(\"code\") +\"&amp;grant_type=authorization_code\"; System.out.println(apiUrl); String result = HttpHelper.doGet(apiUrl); return Bo2Result.success(result); &#125;&#125; 返回结果12345678&#123; code: 0 data: &#123; openid: &quot;o1YDY1TkXx8AtjOx5s**********&quot;, session_key: &quot;IDLvXLfdOAkp**********&#x3D;&#x3D;&quot; &#125; msg: &quot;SUCCESS&quot;&#125; 获取用户手机号这个必须是企业认证的小程序才可以调用哦12345678910111213141516171819getPhoneNumber(e) &#123; /* 用户同意获取手机号 */ if (e.detail.errMsg === 'getPhoneNumber:ok')&#123; this.wx_login().then(wx_login_res =&gt; &#123; return wx_login_res; &#125;).then(wx_login_res =&gt; &#123; return this.ser_login(wx_login_res) &#125;).then(ser_login_res =&gt; &#123; let map = &#123; session_key: ser_login_res.data.data.session_key, encryptedData : e.detail.encryptedData, iv : e.detail.iv &#125; return this.decipher_phone(map); &#125;).then(phone_res =&gt; &#123; console.log('获取用户手机成功',phone_res) &#125;) &#125;&#125; other function123456789101112131415161718192021222324252627282930313233343536wx_login()&#123; return new Promise((resolve, reject) =&gt; &#123; wx.login(&#123; success(res) &#123; console.log(res) if (res.code) &#123; resolve(res) &#125; else &#123; reject(\"err\") &#125; &#125; &#125;) &#125;)&#125;,ser_login(param)&#123; return new Promise((resolve,reject)=&gt;&#123; api.request('login/login', 'POST', param).then(login_res =&gt; &#123; if (login_res.data.code === 0) &#123; resolve(login_res) &#125; else &#123; reject(\"err\") &#125; &#125;) &#125;)&#125;,decipher_phone(param)&#123; return new Promise((resolve, reject) =&gt; &#123; api.request('test/get_phone', 'POST', param).then(decipher_phone_res =&gt; &#123; if (decipher_phone_res.data.code === 0) &#123; resolve(decipher_phone_res) &#125; else &#123; reject(\"err\") &#125; &#125;) &#125;)&#125; 获取access_token12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667package com.leerau.leerauserver.service.test;import com.alibaba.fastjson.JSONObject;import com.leerau.bo2.exception.Bo2Exception;import com.leerau.bo2.exception.ResponseCodeEnum;import com.leerau.leerauserver.conf.Config;import com.leerau.leerauserver.util.HttpHelper;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.redis.core.RedisTemplate;import org.springframework.stereotype.Service;import java.util.Map;import java.util.concurrent.TimeUnit;@Service@Slf4jpublic class TestService &#123; private static final String GET_ACCESS_TOKEN_URL = \"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;\" + \"appid=\" + Config.APP_ID + \"&amp;secret=\"+Config.APP_SECRET; @Autowired private RedisTemplate redisTemplate; public String getAccessToken()&#123; /*先看一下redis里面还有没有,如果有就不用重新获取了*/ Object object = redisTemplate.opsForValue().get(Config.ACCESS_TOKEN_NAME); String token=\"\"; log.info(\"GET_ACCESS_TOKEN_URL:\"+GET_ACCESS_TOKEN_URL); if(object==null)&#123; String tokenInfo = HttpHelper.doGet(GET_ACCESS_TOKEN_URL); Map&lt;String,Object&gt; tokenMap = JSONObject.parseObject(tokenInfo, Map.class); if(tokenMap==null)&#123; throw new Bo2Exception( ResponseCodeEnum.DEFEATED.getCode(), ResponseCodeEnum.DEFEATED.getMessage() ); &#125; if(tokenMap.get(\"errcode\")!=null)&#123; throw new Bo2Exception( Integer.parseInt(tokenMap.get(\"errcode\").toString()), tokenMap.get(\"errmsg\").toString() ); &#125; redisTemplate .opsForValue() .set( /*token名称*/ Config.ACCESS_TOKEN_NAME, /*token值*/ tokenMap.get(\"access_token\"), /*设置有效时间*/ Long.parseLong(tokenMap.get(\"expires_in\").toString())-300, /*有效时间单位*/ TimeUnit.SECONDS); token = tokenMap.get(\"access_token\").toString(); &#125;else&#123; token = object.toString(); &#125; return token; &#125;;&#125; 推送订阅消息推送订阅消息需要先 通过按钮的形式调用 wx.requestSubscribeMessage() 如果失败则表明用户不允许推送 成功则为允许小程序端1234567891011121314151617181920212223242526272829303132333435363738394041424344 /*获取一下推送订阅消息权限 (app.js)*/getSendAuth() &#123; return new Promise((resolve, reject) =&gt; &#123; wx.requestSubscribeMessage(&#123; /*模板id*/ tmplIds: ['J8ShRqDO1bX4JN8pLV_o12seZR62ujTmUfeW8GRxvas'], success(res) &#123; resolve(res) &#125;, fail(res)&#123; resolve(res) &#125; &#125;) &#125;)&#125; /* (index.js)*/deliverMessage()&#123; /*获取权限*/ app.getSendAuth().then(send_auth_res=&gt;&#123; return send_auth_res; &#125;).then(send_auth_res=&gt;&#123; if(send_auth_res)&#123; /*登陆以获取openid (正常应该初始化时获取并储存在前台)*/ return app.wx_login() &#125; &#125;).then(wx_login_res =&gt; &#123; return wx_login_res; &#125;).then(wx_login_res =&gt; &#123; return app.ser_login(wx_login_res) &#125;).then(ser_login_res =&gt; &#123; console.log(\"ser_login_res\", ser_login_res) return ser_login_res; &#125;).then(login_res =&gt; &#123; /*获取到openid*/ console.log('login_res', login_res) if(login_res.errMsg === 'equest:ok' || login_res.data.code === 0)&#123; let openId = &#123;openId:login_res.data.data.openid&#125; /*调用后台推送接口，并传入openId*/ return api.request('test/send_deliver_message','POST',openId) &#125; &#125;).then(send_deliver_message_res=&gt;&#123; console.log('send_deliver_message_res',send_deliver_message_res); &#125;) &#125;, 服务端1234567891011121314151617181920212223242526272829303132333435public Bo2Result sendDeliverMessage(Map&lt;String,Object&gt; map)&#123; String paramString = \"&#123;\" +\"\\\"touser\\\":\\\"\"+map.get(\"openId\")+\"\\\"\" +\",\\\"template_id\\\":\\\"\"+Config.DELIVER_ORDER_MESSAGE_ID+\"\\\"\" +\",\\\"page\\\":\\\"index\\\"\" +\",\\\"miniprogram_state\\\":\\\"developer\\\"\" +\",\\\"lang\\\":\\\"zh_CN\\\"\" +\",\\\"data\\\":&#123;\" + \"\\\"character_string1\\\":&#123;\" + \"\\\"value\\\":\\\"5299\\\"\" + \"&#125;,\" + \"\\\"time2\\\":&#123;\" + \"\\\"value\\\":\\\"2019年10月1日 15:01\\\"\" + \"&#125;,\" + \"\\\"phone_number3\\\":&#123;\" + \"\\\"value\\\":\\\"17640177992\\\"\" + \"&#125;,\" + \"\\\"character_string4\\\":&#123;\" + \"\\\"value\\\":\\\"434991667\\\"\" + \"&#125;,\" + \"\\\"thing6\\\":&#123;\" + \"\\\"value\\\":\\\"LEERAU物流\\\"\" + \"&#125;\" + \"&#125;\" +\"&#125;\"; log.info(paramString); String subscribeUrl = Config.SUBSCRIBE_URL + getAccessToken(); String result = HttpHelper.doPostJson(subscribeUrl,paramString); return Bo2Result.success(result); &#125;","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"https://yybo2.github.io/tags/%E5%AD%A6%E4%B9%A0/"}]},{"title":"Hi I'm Leerau!","slug":"Hi Leerau","date":"2020-07-02T00:48:52.000Z","updated":"2020-07-06T05:59:29.311Z","comments":true,"path":"2020/07/02/Hi Leerau/","link":"","permalink":"https://yybo2.github.io/2020/07/02/Hi%20Leerau/","excerpt":"Hi I'm Leerau!","text":"Hi I’m Leerau!","categories":[{"name":"学习","slug":"学习","permalink":"https://yybo2.github.io/categories/%E5%AD%A6%E4%B9%A0/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://yybo2.github.io/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"代码块测试一下","slug":"Focus","date":"2020-07-02T00:48:52.000Z","updated":"2020-07-03T06:13:27.507Z","comments":true,"path":"2020/07/02/Focus/","link":"","permalink":"https://yybo2.github.io/2020/07/02/Focus/","excerpt":"测试一下代码块显示问题,太细微的地方还没有调整。","text":"HTML 代码12345&lt;div&gt; &lt;img src=\"https://avatars2.githubusercontent.com/u/67574181?s=400&amp;u=d3a38528087e1b186a2ca6f36d5adebaa4d818d3&amp;v=4\" width = \"150\" height = \"150\" align=center /&gt;&lt;/div&gt; JAVA 代码12345678910111213141516/** * @author John Smith &lt;john.smith@example.com&gt;*/package l2f.gameserver.model;public abstract strictfp class L2Char extends L2Object &#123; public static final Short ERROR = 0x0001; public void moveTo(int x, int y, int z) &#123; _ai = null; log(\"Should not be called\"); if (1 &gt; 5) &#123; // wtf!? return; &#125; &#125;&#125; XML 代码1&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;","categories":[{"name":"测试","slug":"测试","permalink":"https://yybo2.github.io/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://yybo2.github.io/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"emoji","slug":"emoji","date":"2020-06-30T05:25:55.000Z","updated":"2020-07-03T06:13:27.412Z","comments":true,"path":"2020/06/30/emoji/","link":"","permalink":"https://yybo2.github.io/2020/06/30/emoji/","excerpt":"可以直接复制的emoji哦","text":".leerau{ font-size:24px; } .emoji-table{ width:100%; } window.onload=function(){ let divEmoji = document.getElementById(\"emoji-div\"); let divEmojiType = document.getElementById(\"emoji-type-div\"); const rowNum = 5; const type = [\"表情\",\"人物\",\"手势\",\"日常\",\"手机\",\"公共\",\"动物\",\"植物\",\"自然\",\"饮食\",\"文体\",\"恐怖\",\"旅游\",\"物品\",\"标志\",\"生肖\",\"星座\",\"钟表\",\"心形\",\"花草\",\"树叶\",\"月亮\",\"水果\",\"钱币\",\"交通\",\"建筑\",\"办公\",\"箭头\"]; let typeStr = \"\"; for(let typeItem in type){ typeStr += \"\"+type[typeItem]+\"\" } divEmojiType.innerHTML = typeStr; const emojiArr={ 表情 : [\"😀\",\"😁\",\"😂\",\"😃\",\"😄\",\"😅\",\"😆\",\"😉\",\"😊\",\"😋\",\"😎\",\"😍\",\"😘\",\"😗\",\"😙\",\"😚\",\"😇\",\"😐\",\"😑\",\"😶\",\"😏\",\"😣\",\"😥\",\"😮\",\"😯\",\"😪\",\"😫\",\"😴\",\"😌\",\"😛\",\"😜\",\"😝\",\"😒\",\"😓\",\"😔\",\"😕\",\"😲\",\"😷\",\"😖\",\"😞\",\"😟\",\"😤\",\"😢\",\"😭\",\"😦\",\"😧\",\"😨\",\"😬\",\"😰\",\"😱\",\"😳\",\"😵\",\"😡\",\"😠\"], 人物 : [\"👦\",\"👧\",\"👨\",\"👩\",\"👴\",\"👵\",\"👶\",\"👱\",\"👮\",\"👲\",\"👳\",\"👷\",\"👸\",\"💂\",\"🎅\",\"👰\",\"👼\",\"💆\",\"💇\",\"🙍\",\"🙎\",\"🙅\",\"🙆\",\"💁\",\"🙋\",\"🙇\",\"🙌\",\"🙏\",\"👤\",\"👥\",\"🚶\",\"🏃\",\"👯\",\"💃\",\"👫\",\"👬\",\"👭\",\"💏\",\"💑\",\"👪\"], 手势 : [\"💪\",\"👈\",\"👉\",\"☝\",\"👆\",\"👇\",\"✌\",\"✋\",\"👌\",\"👍\",\"👎\",\"✊\",\"👊\",\"👋\",\"👏\",\"👐\",\"✍\"], 日常 : [\"👣\",\"👀\",\"👂\",\"👃\",\"👅\",\"👄\",\"💋\",\"👓\",\"👔\",\"👕\",\"👖\",\"👗\",\"👘\",\"👙\",\"👚\",\"👛\",\"👜\",\"👝\",\"🎒\",\"💼\",\"👞\",\"👟\",\"👠\",\"👡\",\"👢\",\"👑\",\"👒\",\"🎩\",\"🎓\",\"💄\",\"💅\",\"💍\",\"🌂\"], 手机 : [\"📱\",\"📲\",\"📶\",\"📳\",\"📴\",\"☎\",\"📞\",\"📟\",\"📠\"], 公共 : [\"♻\",\"🏧\",\"🚮\",\"🚰\",\"♿\",\"🚹\",\"🚺\",\"🚻\",\"🚼\",\"🚾\",\"⚠\",\"🚸\",\"⛔\",\"🚫\",\"🚳\",\"🚭\",\"🚯\",\"🚱\",\"🚷\",\"🔞\",\"💈\"], 动物 : [\"🙈\",\"🙉\",\"🙊\",\"🐵\",\"🐒\",\"🐶\",\"🐕\",\"🐩\",\"🐺\",\"🐱\",\"😺\",\"😸\",\"😹\",\"😻\",\"😼\",\"😽\",\"🙀\",\"😿\",\"😾\",\"🐈\",\"🐯\",\"🐅\",\"🐆\",\"🐴\",\"🐎\",\"🐮\",\"🐂\",\"🐃\",\"🐄\",\"🐷\",\"🐖\",\"🐗\",\"🐽\",\"🐏\",\"🐑\",\"🐐\",\"🐪\",\"🐫\",\"🐘\",\"🐭\",\"🐁\",\"🐀\",\"🐹\",\"🐰\",\"🐇\",\"🐻\",\"🐨\",\"🐼\",\"🐾\",\"🐔\",\"🐓\",\"🐣\",\"🐤\",\"🐥\",\"🐦\",\"🐧\",\"🐸\",\"🐊\",\"🐢\",\"🐍\",\"🐲\",\"🐉\",\"🐳\",\"🐋\",\"🐬\",\"🐟\",\"🐠\",\"🐡\",\"🐙\",\"🐚\",\"🐌\",\"🐛\",\"🐜\",\"🐝\",\"🐞\",\"🦋\"], 植物 : [\"💐\",\"🌸\",\"💮\",\"🌹\",\"🌺\",\"🌻\",\"🌼\",\"🌷\",\"🌱\",\"🌲\",\"🌳\",\"🌴\",\"🌵\",\"🌾\",\"🌿\",\"🍀\",\"🍁\",\"🍂\",\"🍃\"], 自然 : [\"🌍\",\"🌎\",\"🌏\",\"🌐\",\"🌑\",\"🌒\",\"🌓\",\"🌔\",\"🌕\",\"🌖\",\"🌗\",\"🌘\",\"🌙\",\"🌚\",\"🌛\",\"🌜\",\"☀\",\"🌝\",\"🌞\",\"⭐\",\"🌟\",\"🌠\",\"☁\",\"⛅\",\"☔\",\"⚡\",\"❄\",\"🔥\",\"💧\",\"🌊\"], 饮食 : [\"🍇\",\"🍈\",\"🍉\",\"🍊\",\"🍋\",\"🍌\",\"🍍\",\"🍎\",\"🍏\",\"🍐\",\"🍑\",\"🍒\",\"🍓\",\"🍅\",\"🍆\",\"🌽\",\"🍄\",\"🌰\",\"🍞\",\"🍖\",\"🍗\",\"🍔\",\"🍟\",\"🍕\",\"🍳\",\"🍲\",\"🍱\",\"🍘\",\"🍙\",\"🍚\",\"🍛\",\"🍜\",\"🍝\",\"🍠\",\"🍢\",\"🍣\",\"🍤\",\"🍥\",\"🍡\",\"🍦\",\"🍧\",\"🍨\",\"🍩\",\"🍪\",\"🎂\",\"🍰\",\"🍫\",\"🍬\",\"🍭\",\"🍮\",\"🍯\",\"🍼\",\"☕\",\"🍵\",\"🍶\",\"🍷\",\"🍸\",\"🍹\",\"🍺\",\"🍻\",\"🍴\"], 文体 : [\"🎪\",\"🎭\",\"🎨\",\"🎰\",\"🚣\",\"🛀\",\"🎫\",\"🏆\",\"⚽\",\"⚾\",\"🏀\",\"🏈\",\"🏉\",\"🎾\",\"🎱\",\"🎳\",\"⛳\",\"🎣\",\"🎽\",\"🎿\",\"🏂\",\"🏄\",\"🏇\",\"🏊\",\"🚴\",\"🚵\",\"🎯\",\"🎮\",\"🎲\",\"🎷\",\"🎸\",\"🎺\",\"🎻\",\"🎬\"], 恐怖 : [\"😈\",\"👿\",\"👹\",\"👺\",\"💀\",\"☠\",\"👻\",\"👽\",\"👾\",\"💣\"], 旅游 : [\"🌋\",\"🗻\",\"🏠\",\"🏡\",\"🏢\",\"🏣\",\"🏤\",\"🏥\",\"🏦\",\"🏨\",\"🏩\",\"🏪\",\"🏫\",\"🏬\",\"🏭\",\"🏯\",\"🏰\",\"💒\",\"🗼\",\"🗽\",\"⛪\",\"⛲\",\"🌁\",\"🌃\",\"🌆\",\"🌇\",\"🌉\",\"🌌\",\"🎠\",\"🎡\",\"🎢\",\"🚂\",\"🚃\",\"🚄\",\"🚅\",\"🚆\",\"🚇\",\"🚈\",\"🚉\",\"🚊\",\"🚝\",\"🚞\",\"🚋\",\"🚌\",\"🚍\",\"🚎\",\"🚏\",\"🚐\",\"🚑\",\"🚒\",\"🚓\",\"🚔\",\"🚕\",\"🚖\",\"🚗\",\"🚘\",\"🚚\",\"🚛\",\"🚜\",\"🚲\",\"⛽\",\"🚨\",\"🚥\",\"🚦\",\"🚧\",\"⚓\",\"⛵\",\"🚤\",\"🚢\",\"✈\",\"💺\",\"🚁\",\"🚟\",\"🚠\",\"🚡\",\"🚀\",\"🎑\",\"🗿\",\"🛂\",\"🛃\",\"🛄\",\"🛅\"], 物品 : [\"💌\",\"💎\",\"🔪\",\"💈\",\"🚪\",\"🚽\",\"🚿\",\"🛁\",\"⌛\",\"⏳\",\"⌚\",\"⏰\",\"🎈\",\"🎉\",\"🎊\",\"🎎\",\"🎏\",\"🎐\",\"🎀\",\"🎁\",\"📯\",\"📻\",\"📱\",\"📲\",\"☎\",\"📞\",\"📟\",\"📠\",\"🔋\",\"🔌\",\"💻\",\"💽\",\"💾\",\"💿\",\"📀\",\"🎥\",\"📺\",\"📷\",\"📹\",\"📼\",\"🔍\",\"🔎\",\"🔬\",\"🔭\",\"📡\",\"💡\",\"🔦\",\"🏮\",\"📔\",\"📕\",\"📖\",\"📗\",\"📘\",\"📙\",\"📚\",\"📓\",\"📃\",\"📜\",\"📄\",\"📰\",\"📑\",\"🔖\",\"💰\",\"💴\",\"💵\",\"💶\",\"💷\",\"💸\",\"💳\",\"✉\",\"📧\",\"📨\",\"📩\",\"📤\",\"📥\",\"📦\",\"📫\",\"📪\",\"📬\",\"📭\",\"📮\",\"✏\",\"✒\",\"📝\",\"📁\",\"📂\",\"📅\",\"📆\",\"📇\",\"📈\",\"📉\",\"📊\",\"📋\",\"📌\",\"📍\",\"📎\",\"📏\",\"📐\",\"✂\",\"🔒\",\"🔓\",\"🔏\",\"🔐\",\"🔑\",\"🔨\",\"🔫\",\"🔧\",\"🔩\",\"🔗\",\"💉\",\"💊\",\"🚬\",\"🔮\",\"🚩\",\"🎌\",\"💦\",\"💨\"], 标志 : [\"♠\",\"♥\",\"♦\",\"♣\",\"🀄\",\"🎴\",\"🔇\",\"🔈\",\"🔉\",\"🔊\",\"📢\",\"📣\",\"💤\",\"💢\",\"💬\",\"💭\",\"♨\",\"🌀\",\"🔔\",\"🔕\",\"✡\",\"✝\",\"🔯\",\"📛\",\"🔰\",\"🔱\",\"⭕\",\"✅\",\"☑\",\"✔\",\"✖\",\"❌\",\"❎\",\"➕\",\"➖\",\"➗\",\"➰\",\"➿\",\"〽\",\"✳\",\"✴\",\"❇\",\"‼\",\"⁉\",\"❓\",\"❔\",\"❕\",\"❗\",\"©\",\"®\",\"™\",\"🎦\",\"🔅\",\"🔆\",\"💯\",\"🔠\",\"🔡\",\"🔢\",\"🔣\",\"🔤\",\"🅰\",\"🆎\",\"🅱\",\"🆑\",\"🆒\",\"🆓\",\"ℹ\",\"🆔\",\"Ⓜ\",\"🆕\",\"🆖\",\"🅾\",\"🆗\",\"🅿\",\"🆘\",\"🆙\",\"🆚\",\"🈁\",\"🈂\",\"🈷\",\"🈶\",\"🈯\",\"🉐\",\"🈹\",\"🈚\",\"🈲\",\"🉑\",\"🈸\",\"🈴\",\"🈳\",\"㊗\",\"㊙\",\"🈺\",\"🈵\",\"▪\",\"▫\",\"◻\",\"◼\",\"◽\",\"◾\",\"⬛\",\"⬜\",\"🔶\",\"🔷\",\"🔸\",\"🔹\",\"🔺\",\"🔻\",\"💠\",\"🔲\",\"🔳\",\"⚪\",\"⚫\",\"🔴\",\"🔵\"], 生肖 : [\"🐁\",\"🐂\",\"🐅\",\"🐇\",\"🐉\",\"🐍\",\"🐎\",\"🐐\",\"🐒\",\"🐓\",\"🐕\",\"🐖\"], 星座 : [\"♈\",\"♉\",\"♊\",\"♋\",\"♌\",\"♍\",\"♎\",\"♏\",\"♐\",\"♑\",\"♒\",\"♓\",\"⛎\"], 钟表 : [\"🕛\",\"🕧\",\"🕐\",\"🕜\",\"🕑\",\"🕝\",\"🕒\",\"🕞\",\"🕓\",\"🕟\",\"🕔\",\"🕠\",\"🕕\",\"🕡\",\"🕖\",\"🕢\",\"🕗\",\"🕣\",\"🕘\",\"🕤\",\"🕙\",\"🕥\",\"🕚\",\"🕦\",\"⌛\",\"⏳\",\"⌚\",\"⏰\",\"⏱\",\"⏲\",\"🕰\"], 心形 : [\"💘\",\"❤\",\"💓\",\"💔\",\"💕\",\"💖\",\"💗\",\"💙\",\"💚\",\"💛\",\"💜\",\"💝\",\"💞\",\"💟\",\"❣\"], 花草 : [\"💐\",\"🌸\",\"💮\",\"🌹\",\"🌺\",\"🌻\",\"🌼\",\"🌷\",\"🌱\",\"🌿\",\"🍀\"], 树叶 : [\"🌿\",\"🍀\",\"🍁\",\"🍂\",\"🍃\"], 月亮 : [\"🌑\",\"🌒\",\"🌓\",\"🌔\",\"🌕\",\"🌖\",\"🌗\",\"🌘\",\"🌙\",\"🌚\",\"🌛\",\"🌜\",\"🌝\"], 水果 : [\"🍇\",\"🍈\",\"🍉\",\"🍊\",\"🍋\",\"🍌\",\"🍍\",\"🍎\",\"🍏\",\"🍐\",\"🍑\",\"🍒\",\"🍓\"], 钱币 : [\"💴\",\"💵\",\"💶\",\"💷\",\"💰\",\"💸\",\"💳\"], 交通 : [\"🚂\",\"🚃\",\"🚄\",\"🚅\",\"🚆\",\"🚇\",\"🚈\",\"🚉\",\"🚊\",\"🚝\",\"🚞\",\"🚋\",\"🚌\",\"🚍\",\"🚎\",\"🚏\",\"🚐\",\"🚑\",\"🚒\",\"🚓\",\"🚔\",\"🚕\",\"🚖\",\"🚗\",\"🚘\",\"🚚\",\"🚛\",\"🚜\",\"🚲\",\"⛽\",\"🚨\",\"🚥\",\"🚦\",\"🚧\",\"⚓\",\"⛵\",\"🚣\",\"🚤\",\"🚢\",\"✈\",\"💺\",\"🚁\",\"🚟\",\"🚠\",\"🚡\",\"🚀\"], 建筑 : [\"🏠\",\"🏡\",\"🏢\",\"🏣\",\"🏤\",\"🏥\",\"🏦\",\"🏨\",\"🏩\",\"🏪\",\"🏫\",\"🏬\",\"🏭\",\"🏯\",\"🏰\",\"💒\",\"🗼\",\"🗽\",\"⛪\",\"🌆\",\"🌇\",\"🌉\"], 办公 : [\"📱\",\"📲\",\"☎\",\"📞\",\"📟\",\"📠\",\"🔋\",\"🔌\",\"💻\",\"💽\",\"💾\",\"💿\",\"📀\",\"🎥\",\"📺\",\"📷\",\"📹\",\"📼\",\"🔍\",\"🔎\",\"🔬\",\"🔭\",\"📡\",\"📔\",\"📕\",\"📖\",\"📗\",\"📘\",\"📙\",\"📚\",\"📓\",\"📃\",\"📜\",\"📄\",\"📰\",\"📑\",\"🔖\",\"💳\",\"✉\",\"📧\",\"📨\",\"📩\",\"📤\",\"📥\",\"📦\",\"📫\",\"📪\",\"📬\",\"📭\",\"📮\",\"✏\",\"✒\",\"📝\",\"📁\",\"📂\",\"📅\",\"📆\",\"📇\",\"📈\",\"📉\",\"📊\",\"📋\",\"📌\",\"📍\",\"📎\",\"📏\",\"📐\",\"✂\",\"🔒\",\"🔓\",\"🔏\",\"🔐\",\"🔑\"], 箭头 : [\"⬆\",\"↗\",\"➡\",\"↘\",\"⬇\",\"↙\",\"⬅\",\"↖\",\"↕\",\"↔\",\"↩\",\"↪\",\"⤴\",\"⤵\",\"🔃\",\"🔄\",\"🔙\",\"🔚\",\"🔛\",\"🔜\",\"🔝\"] } let str = \"\"; for(let typeKey in emojiArr){ let typeListStr = emojiArr[typeKey]; str += \"\"+\"\"+\"\"+typeKey+\"\"; str += \"\"; for(let emojiItem in typeListStr){ if((emojiItem % rowNum) === 0){ str += \"\"; } if((emojiItem % rowNum) === (rowNum)){ str += \"\"; } str += \"\"+typeListStr[emojiItem]+\"\"; if(emojiItem === (typeListStr.length-1).toString()){ let lostNum = rowNum - (emojiItem % rowNum) - 1; for(let i = 0;i","categories":[{"name":"测试","slug":"测试","permalink":"https://yybo2.github.io/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://yybo2.github.io/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"tags","slug":"bo2","date":"2020-04-28T09:15:54.000Z","updated":"2020-07-03T06:13:27.467Z","comments":true,"path":"2020/04/28/bo2/","link":"","permalink":"https://yybo2.github.io/2020/04/28/bo2/","excerpt":"测试一下","text":"I’m Bo2!","categories":[{"name":"测试","slug":"测试","permalink":"https://yybo2.github.io/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"测试","slug":"测试","permalink":"https://yybo2.github.io/tags/%E6%B5%8B%E8%AF%95/"}]}],"categories":[{"name":"学习","slug":"学习","permalink":"https://yybo2.github.io/categories/%E5%AD%A6%E4%B9%A0/"},{"name":"测试","slug":"测试","permalink":"https://yybo2.github.io/categories/%E6%B5%8B%E8%AF%95/"}],"tags":[{"name":"学习","slug":"学习","permalink":"https://yybo2.github.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"测试","slug":"测试","permalink":"https://yybo2.github.io/tags/%E6%B5%8B%E8%AF%95/"}]}